<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.doubleDimple.stockServer.mapper.InventoryMapper">

	<!--实体映射-->
	<resultMap id="base_result_map" type="stock.entity.pojo.Inventory">
		<!--商品ID-->
		<id column="id" property="id"  />
		<!--商品编号-->
		<result column="product_code" property="productCode"  />
		<!--商品名称-->
		<result column="product_name" property="productName"  />
		<!--商品描述-->
		<result column="product_description" property="productDescription"  />
		<!--库存数量-->
		<result column="stock_quantity" property="stockQuantity"  />
		<!--创建时间-->
		<result column="created_at" property="createdAt"  />
		<!--修改时间-->
		<result column="updated_at" property="updatedAt"  />
		<!--备注-->
		<result column="remarks" property="remarks"  />
	</resultMap>


	<!-- 通用查询结果列-->
	<sql id="base_column_list">
		 `id`,`product_code`,`product_name`,`product_description`,`stock_quantity`,`created_at`,`updated_at`,`remarks`
	</sql>

	<sql id="base_condition_filed">
			<if test="id != null">
				 and  `id` = #{id}
			</if>
			<if test="productCode != null and productCode !=''">
				 and  `product_code` = #{productCode}
			</if>
			<if test="productName != null and productName !=''">
				 and  `product_name` = #{productName}
			</if>
			<if test="productDescription != null and productDescription !=''">
				 and  `product_description` = #{productDescription}
			</if>
			<if test="stockQuantity != null">
				 and  `stock_quantity` = #{stockQuantity}
			</if>
			<if test="createdAt != null">
				 and  `created_at` = #{createdAt}
			</if>
			<if test="updatedAt != null">
				 and  `updated_at` = #{updatedAt}
			</if>
			<if test="remarks != null and remarks !=''">
				 and  `remarks` = #{remarks}
			</if>
	</sql>
	<!-- 通用条件列-->
	<sql id="base_condition">
	 <where> <include refid="base_condition_filed" />	 </where>
	</sql>

	<!-- 通用查询条件列-->
	<sql id="query_condition">
	 <where>
			<include refid="base_condition_filed" />
			<if test="productCodeFuzzy != null  and productCodeFuzzy != ''">
				 and  `product_code` like concat('%', #{productCodeFuzzy}, '%')
			</if>
			<if test="productNameFuzzy != null  and productNameFuzzy != ''">
				 and  `product_name` like concat('%', #{productNameFuzzy}, '%')
			</if>
			<if test="productDescriptionFuzzy != null  and productDescriptionFuzzy != ''">
				 and  `product_description` like concat('%', #{productDescriptionFuzzy}, '%')
			</if>
			<if test="createdAtStart != null and createdAtStart !='' ">
				 <![CDATA[ and  `created_at`>=str_to_date('${createdAtStart}', '%Y-%m-%d') ]]>
			</if>
			<if test="createdAtEnd!= null and createdAtEnd!=''">
				 <![CDATA[ and  `created_at`< date_sub(str_to_date('${createdAtEnd}','%Y-%m-%d'),interval -1 day) ]]>
			</if>
			<if test="updatedAtStart != null and updatedAtStart !='' ">
				 <![CDATA[ and  `updated_at`>=str_to_date('${updatedAtStart}', '%Y-%m-%d') ]]>
			</if>
			<if test="updatedAtEnd!= null and updatedAtEnd!=''">
				 <![CDATA[ and  `updated_at`< date_sub(str_to_date('${updatedAtEnd}','%Y-%m-%d'),interval -1 day) ]]>
			</if>
			<if test="remarksFuzzy != null  and remarksFuzzy != ''">
				 and  `remarks` like concat('%', #{remarksFuzzy}, '%')
			</if>
	 </where>
	</sql>

	<!-- 查询集合-->
	<select id="selectList" resultMap="base_result_map" >
		 SELECT <include refid="base_column_list" /> FROM `inventory` <include refid="query_condition" />
		 <if test="orderBy!=null">
			 order by ${orderBy}
		 </if>
		 <if test="page!=null">
			 limit #{page.start},#{page.end}
		 </if>
	</select>

	<!-- 查询数量-->
	<select id="selectCount" resultType="java.lang.Integer" >
		 SELECT count(1) FROM `inventory` <include refid="query_condition" />
	</select>

	<!-- 插入 （匹配有值的字段）-->
	<insert id="insert" parameterType="stock.entity.pojo.Inventory">
		<selectKey keyProperty="id" resultType="Integer" order="AFTER">
			SELECT LAST_INSERT_ID()
		</selectKey>
		 INSERT INTO `inventory`
		 <trim prefix="(" suffix=")" suffixOverrides="," >
			<if test="productCode != null">
				 `product_code`,
			</if>
			<if test="productName != null">
				 `product_name`,
			</if>
			<if test="productDescription != null">
				 `product_description`,
			</if>
			<if test="stockQuantity != null">
				 `stock_quantity`,
			</if>
			<if test="createdAt != null">
				 `created_at`,
			</if>
			<if test="updatedAt != null">
				 `updated_at`,
			</if>
			<if test="remarks != null">
				 `remarks`,
			</if>
		 </trim>
		 <trim prefix="values (" suffix=")" suffixOverrides="," >
			<if test="productCode!=null">
				 #{productCode},
			</if>
			<if test="productName!=null">
				 #{productName},
			</if>
			<if test="productDescription!=null">
				 #{productDescription},
			</if>
			<if test="stockQuantity!=null">
				 #{stockQuantity},
			</if>
			<if test="createdAt!=null">
				 #{createdAt},
			</if>
			<if test="updatedAt!=null">
				 #{updatedAt},
			</if>
			<if test="remarks!=null">
				 #{remarks},
			</if>
		 </trim>
	</insert>

	<!-- 插入 （根据表名称插入）-->
	<insert id="insertWidthTableName" parameterType="stock.entity.pojo.Inventory">
		<selectKey keyProperty="bean.id" resultType="Integer" order="AFTER">
			SELECT LAST_INSERT_ID()
		</selectKey>
		 INSERT INTO `${tableName}`(`product_code`,`product_name`,`product_description`,`stock_quantity`,`created_at`,`updated_at`,`remarks`)values(
			 #{bean.productCode},#{bean.productName},#{bean.productDescription},#{bean.stockQuantity},#{bean.createdAt},#{bean.updatedAt},#{bean.remarks})
		ON DUPLICATE KEY UPDATE 
		`product_code` = values(`product_code`),`product_name` = values(`product_name`),`product_description` = values(`product_description`),`stock_quantity` = values(`stock_quantity`),`created_at` = values(`created_at`),`updated_at` = values(`updated_at`),`remarks` = values(`remarks`)
	</insert>

	<!-- 添加 （批量插入或修改）-->
		<insert id="insertBatch" parameterType="stock.entity.pojo.Inventory">
		 INSERT INTO `inventory`
		 <trim prefix="(" suffix=")" suffixOverrides=",">
			`id`,
		 <if test="list[0].product_code!= null">
		 `product_code`,
		 </if>
		 <if test="list[0].product_name!= null">
		 `product_name`,
		 </if>
		 <if test="list[0].product_description!= null">
		 `product_description`,
		 </if>
		 <if test="list[0].stock_quantity!= null">
		 `stock_quantity`,
		 </if>
		 <if test="list[0].created_at!= null">
		 `created_at`,
		 </if>
		 <if test="list[0].updated_at!= null">
		 `updated_at`,
		 </if>
		 <if test="list[0].remarks!= null">
		 `remarks`,
		 </if>
		</trim>
		values
			 <foreach collection="list" item="item" separator=",">
			<trim prefix="(" suffix=")" suffixOverrides=",">
			#{item.id},
		 <if test="list[0].product_code!= null">
		 #{item.productCode},
		 </if>
		 <if test="list[0].product_name!= null">
		 #{item.productName},
		 </if>
		 <if test="list[0].product_description!= null">
		 #{item.productDescription},
		 </if>
		 <if test="list[0].stock_quantity!= null">
		 #{item.stockQuantity},
		 </if>
		 <if test="list[0].created_at!= null">
		 #{item.createdAt},
		 </if>
		 <if test="list[0].updated_at!= null">
		 #{item.updatedAt},
		 </if>
		 <if test="list[0].remarks!= null">
		 #{item.remarks},
		 </if>

		</trim>
		</foreach>
		ON DUPLICATE KEY UPDATE 
		
		<trim suffixOverrides="," >
		 <if test="list[0].product_code!= null">
		 `product_code`= values(`product_code`),
		 </if>
		 <if test="list[0].product_name!= null">
		 `product_name`= values(`product_name`),
		 </if>
		 <if test="list[0].product_description!= null">
		 `product_description`= values(`product_description`),
		 </if>
		 <if test="list[0].stock_quantity!= null">
		 `stock_quantity`= values(`stock_quantity`),
		 </if>
		 <if test="list[0].created_at!= null">
		 `created_at`= values(`created_at`),
		 </if>
		 <if test="list[0].updated_at!= null">
		 `updated_at`= values(`updated_at`),
		 </if>
		 <if test="list[0].remarks!= null">
		 `remarks`= values(`remarks`),
		 </if>

		</trim>
		</insert>

	<!-- 根据PrimaryKey修 改-->
	<update id="updateByPrimaryKey" parameterType="stock.entity.pojo.Inventory">
		 UPDATE `inventory`
 		 <set> 
			<if test="bean.productCode != null">
				 `product_code` = #{bean.productCode},
			</if>
			<if test="bean.productName != null">
				 `product_name` = #{bean.productName},
			</if>
			<if test="bean.productDescription != null">
				 `product_description` = #{bean.productDescription},
			</if>
			<if test="bean.stockQuantity != null">
				 `stock_quantity` = #{bean.stockQuantity},
			</if>
			<if test="bean.createdAt != null">
				 `created_at` = #{bean.createdAt},
			</if>
			<if test="bean.updatedAt != null">
				 `updated_at` = #{bean.updatedAt},
			</if>
			<if test="bean.remarks != null">
				 `remarks` = #{bean.remarks},
			</if>
 		 </set>
 		 where `id`=#{id}
	</update>

	<!-- 根据PrimaryKey删除-->
	<delete id="deleteByPrimaryKey">
		delete from `inventory` where `id`=#{id}
	</delete>

	<!-- 根据PrimaryKey获取对象-->
	<select id="selectByPrimaryKey" resultMap="base_result_map" >
		select <include refid="base_column_list" /> from `inventory` where `id`=#{id}
	</select>

</mapper>